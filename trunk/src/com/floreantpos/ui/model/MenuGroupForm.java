/*
 * FoodGroupEditor.java
 *
 * Created on August 2, 2006, 8:55 PM
 */

package com.floreantpos.ui.model;

import java.awt.Frame;
import java.util.List;

import com.floreantpos.model.MenuCategory;
import com.floreantpos.model.MenuGroup;
import com.floreantpos.model.dao.MenuCategoryDAO;
import com.floreantpos.model.dao.MenuGroupDAO;
import com.floreantpos.swing.ComboBoxModel;
import com.floreantpos.swing.FixedLengthDocument;
import com.floreantpos.swing.MessageDialog;
import com.floreantpos.ui.BeanEditor;
import com.floreantpos.ui.dialog.BeanEditorDialog;
import com.floreantpos.util.POSUtil;
import net.miginfocom.swing.MigLayout;
import javax.swing.JLabel;
import com.floreantpos.swing.FixedLengthTextField;
import com.floreantpos.swing.IntegerTextField;
import javax.swing.JButton;

/**
 *
 * @author  MShahriar
 */
public class MenuGroupForm extends BeanEditor {
    
    /** Creates new form FoodGroupEditor */
	public MenuGroupForm() {
		this(new MenuGroup());
	}
	
    public MenuGroupForm(MenuGroup foodGroup) {
        initComponents();
        
        tfName.setDocument(new FixedLengthDocument(40));
        
        MenuCategoryDAO categoryDAO = new MenuCategoryDAO();
        List<MenuCategory> foodCategories = categoryDAO.findAll();
        cbCategory.setModel(new ComboBoxModel(foodCategories));
        
        setBean(foodGroup);
        setLayout(new MigLayout("", "[70px][289px,grow][6px][49px]", "[19px][][25px][][][15px]"));
        
        lblTranslatedName = new JLabel("Translated name");
        add(lblTranslatedName, "cell 0 1,alignx trailing");
        
        tfTranslatedName = new FixedLengthTextField();
        add(tfTranslatedName, "cell 1 1,growx");
        add(jLabel2, "cell 0 2,alignx left,aligny center");
        add(jLabel1, "cell 0 0,alignx left,aligny center");
        add(tfName, "cell 1 0 3 1,growx,aligny top");
        
        lblSortOrder = new JLabel("Sort order");
        add(lblSortOrder, "cell 0 3,alignx leading");
        
        tfSortOrder = new IntegerTextField();
        tfSortOrder.setColumns(6);
        add(tfSortOrder, "cell 1 3");
        
        lblButtonColor = new JLabel("Button color");
        add(lblButtonColor, "cell 0 4");
        
        btnButtonColor = new JButton("");
        add(btnButtonColor, "cell 1 4,grow");
        add(chkVisible, "cell 1 5,alignx left,aligny top");
        add(cbCategory, "cell 1 2,growx,aligny top");
        add(btnNewCategory, "cell 3 2,alignx left,aligny top");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        tfName = new com.floreantpos.swing.FixedLengthTextField();
        jLabel2 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox();
        chkVisible = new javax.swing.JCheckBox();
        btnNewCategory = new javax.swing.JButton();

        jLabel1.setText(com.floreantpos.POSConstants.NAME + ":");

        jLabel2.setText(com.floreantpos.POSConstants.CATEGORY + ":");

        chkVisible.setText(com.floreantpos.POSConstants.VISIBLE);
        chkVisible.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkVisible.setMargin(new java.awt.Insets(0, 0, 0, 0));

        btnNewCategory.setText("...");
        btnNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doNewCategory(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void doNewCategory(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doNewCategory
    	try {
			MenuCategoryForm editor = new MenuCategoryForm();
			BeanEditorDialog dialog = new BeanEditorDialog(editor, new Frame(), true);
			dialog.open();
			if (!dialog.isCanceled()) {
				MenuCategory foodCategory = (MenuCategory) editor.getBean();
				ComboBoxModel model = (ComboBoxModel) cbCategory.getModel();
				model.addElement(foodCategory);
				model.setSelectedItem(foodCategory);
			}
		} catch (Exception x) {
			MessageDialog.showError(com.floreantpos.POSConstants.ERROR_MESSAGE, x);
		}
    }//GEN-LAST:event_doNewCategory
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewCategory;
    private javax.swing.JComboBox cbCategory;
    private javax.swing.JCheckBox chkVisible;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.floreantpos.swing.FixedLengthTextField tfName;
    private JLabel lblTranslatedName;
    private FixedLengthTextField tfTranslatedName;
    private JLabel lblSortOrder;
    private JLabel lblButtonColor;
    private IntegerTextField tfSortOrder;
    private JButton btnButtonColor;
    // End of variables declaration//GEN-END:variables
	@Override
	public boolean save() {
		if(!updateModel()) return false;
		
		MenuGroup foodGroup = (MenuGroup) getBean();
		
		try {
			MenuGroupDAO foodGroupDAO = new MenuGroupDAO();
			foodGroupDAO.saveOrUpdate(foodGroup);
		} catch (Exception e) {
			MessageDialog.showError(e);
			return false;
		}
		return true;
	}

	@Override
	protected void updateView() {
		MenuGroup foodGroup = (MenuGroup) getBean();
		if(foodGroup == null) {
			tfName.setText("");
			cbCategory.setSelectedItem(null);
			chkVisible.setSelected(false);
			return;
		}
		tfName.setText(foodGroup.getName());
		chkVisible.setSelected(foodGroup.isVisible());
		
		if(foodGroup.getParent() != null) {
			cbCategory.setSelectedItem(foodGroup.getParent());
		}
	}

	@Override
	protected boolean updateModel() {
		MenuGroup foodGroup = (MenuGroup) getBean();
		if(foodGroup == null) {
			return false;
		}
		
		String name = tfName.getText();
    	if(POSUtil.isBlankOrNull(name)) {
    		MessageDialog.showError("Name is required");
    		return false;
    	}
		
    	MenuCategory category = (MenuCategory) cbCategory.getSelectedItem();
    	if(category == null) {
    		MessageDialog.showError("Category is required");
    		return false;
    	}
    	
		foodGroup.setName(tfName.getText());
		
		foodGroup.setParent(category);
		foodGroup.setVisible(chkVisible.isSelected());
		
		return true;
	}
    
	public String getDisplayText() {
    	MenuGroup foodGroup = (MenuGroup) getBean();
    	if(foodGroup.getId() == null) {
    		return "New menu group";
    	}
    	return "Edit menu group";
    }
}
