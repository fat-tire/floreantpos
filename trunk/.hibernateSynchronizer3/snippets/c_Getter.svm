:Modified=true
:Description=
-
#if ($prop.get("field-description", true))
	/**
$!{prop.getJavaDoc("field-description", "	 ")}
	 */
#elseif ($prop.Column)
	/**
	 * Return the value associated with the column: ${prop.Column}
	 */
#end
	$!{prop.ScopeGet} ${prop.AbsoluteSignatureClassName}$!{prop.GenericMarker} ${prop.GetterName} () {
		#if(${prop.isPrimitive()} == false && ${prop.ObjectClass} == "java.lang.Double")
			#if( ${prop.get("defaultValue")})
				return ${prop.VarName} == null ? Double.valueOf(${prop.get("defaultValue")}) : ${prop.VarName};
			#else
				return ${prop.VarName} == null ? Double.valueOf(0) : ${prop.VarName};
		#end
		#elseif(${prop.isPrimitive()} == false && ${prop.ObjectClass} == "java.lang.Integer")
			#if(${prop.get("defaultValue")})
				return ${prop.VarName} == null ? ${prop.get("defaultValue")} : ${prop.VarName};
			#else
				return ${prop.VarName} == null ? Integer.valueOf(0) : ${prop.VarName};
		#end
		#elseif(${prop.isPrimitive()} == false && ${prop.ObjectClass} == "java.lang.Boolean")
			#if( ${prop.get("defaultValue")})
				return ${prop.VarName} == null ? Boolean.valueOf(${prop.get("defaultValue")}) : ${prop.VarName};
			#else
			return ${prop.VarName} == null ? Boolean.FALSE : ${prop.VarName};
		#end
		#elseif ($prop.Column)
			return ${prop.VarName};
		#end
	}